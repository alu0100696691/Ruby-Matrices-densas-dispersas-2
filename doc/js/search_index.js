var search_data = {"index":{"searchIndex":["matrixdsl","sparsematrix","abstractmatrix","densematrix","fraction","sparsematrix","sparsevector","*()","*()","*()","*()","+()","+()","+()","+()","-()","-@()","/()","<=>()","==()","abs()","coerce()","gcd()","insert()","max()","min()","minimiza()","new()","new()","new()","new()","new()","new()","operand()","operation()","option()","print_matrix()","print_matrix()","read_matrix()","reciprocal()","result()","run()","to_f()","to_s()","to_s()","to_s()","to_s()","to_s()","valor()","gemfile","gemfile.lock","license","readme","rakefile","created.rid","sparse_matrix.rb~","gemnasium.rake"],"longSearchIndex":["matrixdsl","sparsematrix","sparsematrix::abstractmatrix","sparsematrix::densematrix","sparsematrix::fraction","sparsematrix::sparsematrix","sparsematrix::sparsevector","sparsematrix::abstractmatrix#*()","sparsematrix::densematrix#*()","sparsematrix::fraction#*()","sparsematrix::sparsematrix#*()","sparsematrix::abstractmatrix#+()","sparsematrix::densematrix#+()","sparsematrix::fraction#+()","sparsematrix::sparsematrix#+()","sparsematrix::fraction#-()","sparsematrix::fraction#-@()","sparsematrix::fraction#/()","sparsematrix::fraction#<=>()","sparsematrix::fraction#==()","sparsematrix::fraction#abs()","sparsematrix::fraction#coerce()","sparsematrix#gcd()","sparsematrix::sparsematrix#insert()","sparsematrix::sparsematrix#max()","sparsematrix::sparsematrix#min()","sparsematrix::fraction#minimiza()","matrixdsl::new()","sparsematrix::abstractmatrix::new()","sparsematrix::densematrix::new()","sparsematrix::fraction::new()","sparsematrix::sparsematrix::new()","sparsematrix::sparsevector::new()","matrixdsl#operand()","matrixdsl#operation()","matrixdsl#option()","sparsematrix::abstractmatrix#print_matrix()","sparsematrix::densematrix#print_matrix()","sparsematrix::abstractmatrix#read_matrix()","sparsematrix::fraction#reciprocal()","matrixdsl#result()","matrixdsl#run()","sparsematrix::fraction#to_f()","sparsematrix::abstractmatrix#to_s()","sparsematrix::densematrix#to_s()","sparsematrix::fraction#to_s()","sparsematrix::sparsematrix#to_s()","sparsematrix::sparsevector#to_s()","sparsematrix::sparsematrix#valor()","","","","","","","",""],"info":[["MatrixDsl","","MatrixDsl.html","","<p>DSL INTERNO PARA OPERAR CON MATRICES\n"],["SparseMatrix","","SparseMatrix.html","","<p>Modulo que contiene la gema para el trabajo con matrices.\n\n<pre>Para la realizacion de esta practica se ha creado ...</pre>\n"],["SparseMatrix::AbstractMatrix","","SparseMatrix/AbstractMatrix.html","","<p>clase abstracta matrix\n"],["SparseMatrix::DenseMatrix","","SparseMatrix/DenseMatrix.html","","<p>clase para matrices densas\n"],["SparseMatrix::Fraction","","SparseMatrix/Fraction.html","","<p>clase para operaciones de numeros fraccionales\n"],["SparseMatrix::SparseMatrix","","SparseMatrix/SparseMatrix.html","","<p>matrix dispersa\n"],["SparseMatrix::SparseVector","","SparseMatrix/SparseVector.html","","<p>clase para guardar vector de tuplas\n"],["*","SparseMatrix::AbstractMatrix","SparseMatrix/AbstractMatrix.html#method-i-2A","(b)","<p>Retorna una excepcion ya que no debe ser llamada nunca\n"],["*","SparseMatrix::DenseMatrix","SparseMatrix/DenseMatrix.html#method-i-2A","(b)","<p>multiplicacion de matrices, dispersas y densas\n"],["*","SparseMatrix::Fraction","SparseMatrix/Fraction.html#method-i-2A","(b)","<p>multiplicacion de numeros fraccionarios\n"],["*","SparseMatrix::SparseMatrix","SparseMatrix/SparseMatrix.html#method-i-2A","(b)","<p>metodo para multiplicar matrices, dispersa como densas\n"],["+","SparseMatrix::AbstractMatrix","SparseMatrix/AbstractMatrix.html#method-i-2B","(b)","<p>Retorna una excepcion ya que no debe ser llamada nunca\n"],["+","SparseMatrix::DenseMatrix","SparseMatrix/DenseMatrix.html#method-i-2B","(b)","<p>suma de matrices, tando densas como dispersas\n"],["+","SparseMatrix::Fraction","SparseMatrix/Fraction.html#method-i-2B","(b)","<p>suma de numeros fraccionarios\n"],["+","SparseMatrix::SparseMatrix","SparseMatrix/SparseMatrix.html#method-i-2B","(other)","<p>metodo para sumar matrices, dispersa como densa\n"],["-","SparseMatrix::Fraction","SparseMatrix/Fraction.html#method-i-2D","(b)","<p>resta de numeros fraccionarios\n"],["-@","SparseMatrix::Fraction","SparseMatrix/Fraction.html#method-i-2D-40","()","<p>opuesto\n"],["/","SparseMatrix::Fraction","SparseMatrix/Fraction.html#method-i-2F","(b)","<p>division de numeros fraccionarios\n"],["<=>","SparseMatrix::Fraction","SparseMatrix/Fraction.html#method-i-3C-3D-3E","(b)","<p>comparar\n"],["==","SparseMatrix::Fraction","SparseMatrix/Fraction.html#method-i-3D-3D","(b)","<p>comparar\n"],["abs","SparseMatrix::Fraction","SparseMatrix/Fraction.html#method-i-abs","()","<p>valor absoluto\n"],["coerce","SparseMatrix::Fraction","SparseMatrix/Fraction.html#method-i-coerce","(b)","<p>Retorna la misma fraccion y el numero que le pasamos por parametro lo pasa\na fraccion\n"],["gcd","SparseMatrix","SparseMatrix.html#method-i-gcd","(u, v)","<p>maximo comun divisor\n"],["insert","SparseMatrix::SparseMatrix","SparseMatrix/SparseMatrix.html#method-i-insert","(vector)","<p>Introduce en la matriz un registro de la clase sparse_vector\n"],["max","SparseMatrix::SparseMatrix","SparseMatrix/SparseMatrix.html#method-i-max","()","<p>elemento maximo de la matrix\n"],["min","SparseMatrix::SparseMatrix","SparseMatrix/SparseMatrix.html#method-i-min","()","<p>elemento minimo de la matrix\n"],["minimiza","SparseMatrix::Fraction","SparseMatrix/Fraction.html#method-i-minimiza","(x,y)","<p>minimizar fraccion\n"],["new","MatrixDsl","MatrixDsl.html#method-c-new","(operation = \"\", &block)","<p>Initialize, inicializa los valores a los que se les pase por parametro\n"],["new","SparseMatrix::AbstractMatrix","SparseMatrix/AbstractMatrix.html#method-c-new","(r=0,c=0)","<p>Initialize, inicializa los valores a 0 por defecto o los que se les pase\npor parametro\n"],["new","SparseMatrix::DenseMatrix","SparseMatrix/DenseMatrix.html#method-c-new","(r=0,c=0,matrix=[])","<p>Initialize, inicializa los valores a los que se les pase por parametro\n"],["new","SparseMatrix::Fraction","SparseMatrix/Fraction.html#method-c-new","(*args)","<p>Initialize, inicializa los valores a los que se les pase por parametro\n"],["new","SparseMatrix::SparseMatrix","SparseMatrix/SparseMatrix.html#method-c-new","(*args)","<p>Initialize, inicializa los valores a los que se les pase por parametro\n"],["new","SparseMatrix::SparseVector","SparseMatrix/SparseVector.html#method-c-new","(i=0,j=0,v=0)","<p>Initialize, inicializa los valores a 0 por defecto o los que se les pase\npor parametro\n"],["operand","MatrixDsl","MatrixDsl.html#method-i-operand","(fil1,fil2)","<p>MATRIZ DE OBJETOS PARA GUARDAR LOS OPERANDOS MATRIZ\n"],["operation","MatrixDsl","MatrixDsl.html#method-i-operation","(opt)","<p>SE ESPECIFICA QUE OPERACION REALIZAR CON LAS MATRICES\n"],["option","MatrixDsl","MatrixDsl.html#method-i-option","(opt)","<p>OPCIONES PARA CREAR Y MOSTRAR LAS MATRICES\n"],["print_matrix","SparseMatrix::AbstractMatrix","SparseMatrix/AbstractMatrix.html#method-i-print_matrix","()","<p>Retorna una excepcion ya que no debe ser llamada nunca\n"],["print_matrix","SparseMatrix::DenseMatrix","SparseMatrix/DenseMatrix.html#method-i-print_matrix","()","<p>metodo que imprime la matrix en pantalla\n"],["read_matrix","SparseMatrix::AbstractMatrix","SparseMatrix/AbstractMatrix.html#method-i-read_matrix","()","<p>Retorna una excepcion ya que no debe ser llamada nunca\n"],["reciprocal","SparseMatrix::Fraction","SparseMatrix/Fraction.html#method-i-reciprocal","()","<p>devuelve fraccion dada la vuelta\n"],["result","MatrixDsl","MatrixDsl.html#method-i-result","(res)","<p>REPRESENTAR POR PANTALLA LAS OPERACIONES\n"],["run","MatrixDsl","MatrixDsl.html#method-i-run","()","<p>METODO PRINCIPAL PARA REALIZAR LAS OPERACIONES CON LAS MATRICES\n"],["to_f","SparseMatrix::Fraction","SparseMatrix/Fraction.html#method-i-to_f","()","<p>devuelve float\n"],["to_s","SparseMatrix::AbstractMatrix","SparseMatrix/AbstractMatrix.html#method-i-to_s","()","<p>Retorna una excepcion ya que no debe ser llamada nunca\n"],["to_s","SparseMatrix::DenseMatrix","SparseMatrix/DenseMatrix.html#method-i-to_s","()","<p>devuelve cadena string\n"],["to_s","SparseMatrix::Fraction","SparseMatrix/Fraction.html#method-i-to_s","()","<p>devuelve string\n"],["to_s","SparseMatrix::SparseMatrix","SparseMatrix/SparseMatrix.html#method-i-to_s","()","<p>retorna un string con la matriz entera\n"],["to_s","SparseMatrix::SparseVector","SparseMatrix/SparseVector.html#method-i-to_s","()","<p>Retorna un string con valor de i valor de j y el valor en dicha posicion\n"],["valor","SparseMatrix::SparseMatrix","SparseMatrix/SparseMatrix.html#method-i-valor","(k,j)","<p>para buscar un valor especifico\n"],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39;\n<p>gem &#39;bundler&#39; gem &#39;rake&#39; gem &#39;gemnasium&#39; gem\n&#39;RDoc&#39; …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  gemnasium (2.0.1)\n  rake (10.1.0)</pre>\n<p>PLATFORMS\n"],["LICENSE","","LICENSE.html","","<p>The MIT License (MIT)\n<p>Copyright © 2013 Kevin Robayna\n<p>Permission is hereby granted, free of charge, to …\n"],["README","","README_md.html","","<p>DSL-Matrix ]\n<p>DSL for Gem SparseMatrix and we use gem Gemnasium for check dependency of\nour gem\n<p>RubyGems …\n"],["Rakefile","","Rakefile.html","","<p>$:.unshift File.dirname(__FILE__) + &#39;lib&#39;\n<p>task :default =&gt; :all\n<p>desc “Ejecucion de la suma …\n"],["created.rid","","doc/created_rid.html","",""],["sparse_matrix.rb~","","lib/sparse_matrix_rb~.html","","<p># = Fichero que contiene la gema para el trabajo con matrices. #  # \nOperaciones con matrices <strong>dispersas</strong> …\n"],["gemnasium.rake","","lib/tasks/gemnasium_rake.html","","<p>namespace :gemnasium do\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">&#39;gemnasium&#39;</span>\n\n<span class=\"ruby-identifier\">desc</span> <span class=\"ruby-string\">&quot;Push dependency files to gemnasium&quot;</span>\n<span class=\"ruby-identifier\">task</span> :<span class=\"ruby-identifier\">push</span> <span class=\"ruby-keyword\">do</span>\n <span class=\"ruby-operator\">...</span>\n</pre>\n"]]}}